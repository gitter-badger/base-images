#!/bin/bash

version="trusty"

tmpdir=$(mktemp -d)

IMAGEDIR=$tmpdir/ubuntu/rootfs

wget https://partner-images.canonical.com/core/trusty/current/ubuntu-$version-core-cloudimg-amd64-root.tar.gz -O $tmpdir/root.tar.gz
mkdir -p $IMAGEDIR
pushd $IMAGEDIR
tar xf $tmpdir/root.tar.gz
popd

sudo cp base.sh $IMAGEDIR/script.sh
sudo systemd-nspawn -D $IMAGEDIR chmod +x /script.sh
sudo systemd-nspawn -D $IMAGEDIR /script.sh
sudo systemd-nspawn -D $IMAGEDIR rm -f /script.sh

# Generate manifest
actool_version=$(actool version | awk '{print $3}')
cat <<EOF > $tmpdir/ubuntu/manifest
{
    "acKind": "ImageManifest",
    "acVersion": "$actool_version",
    "name": "higebu/ubuntu",
    "labels": [
        {
            "name": "version",
            "value": "$version"
        },
        {
            "name": "arch",
            "value": "amd64"
        },
        {
            "name": "os",
            "value": "linux"
        }
    ],
    "app": {
        "exec": [
            "/usr/sbin/sshd",
            "-D"
        ],
        "eventHandlers": [
            {
                "exec": [
                    "/bin/mkdir", "-p", "/var/run/sshd"
                ],
                "name": "pre-start"
            }
        ],
        "group": "0",
        "user": "0",
        "ports": [
            {
                "name": "ssh",
                "port": 22,
                "protocol": "tcp"
            }
        ]
    },
    "annotations": [
        {
            "name": "authors",
            "value": "Yuya Kusakabe <yuya.kusakabe@gmail.com>"
        }
    ]
}
EOF

# Build ACI
sudo actool build -overwrite=true $tmpdir/ubuntu/ $tmpdir/ubuntu.aci

# Fetch ACI
#sudo rkt --insecure-skip-verify=true fetch $tmpdir/ubuntu.aci

cp -p $tmpdir/ubuntu.aci .

# Clean up
sudo rm -rf $tmpdir
